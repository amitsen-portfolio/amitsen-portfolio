# ci.yml
# GitHub Actions Workflow
# This workflow handles the Continuous Integration (CI) and Deployment (CD) process for a portfolio website.

name: CI/CD Pipeline for My Portfolio Website

# Triggers for the workflow: on push and pull request events to 'version-1' branch, and manual triggers (workflow_dispatch).
on:
  push:
    branches:
      - version-1
  pull_request:
    branches:
      - version-1
  workflow_dispatch:

# Job definitions
jobs:
  # First job: Build and Test
  build-and-test:
    runs-on: ubuntu-latest  # Specifies the runner environment (Ubuntu latest version)

    # Steps performed in the build-and-test job
    steps:
    # Checks out the repository code into the GitHub Actions runner.
    - name: Checkout code
      uses: actions/checkout@v4

    # Sets up the Node.js environment using a specific version.
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.10.0'  # Define the Node.js version to match the development environment.

    # Caches Node.js modules to speed up future workflow runs.
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    # Installs project dependencies defined in package.json.
    - name: Install dependencies
      run: npm install

    # Builds the Next.js application.
    - name: Build
      run: npm run build

    # Optional: Run tests - Uncomment below if tests are configured.
    #- name: Run tests
    #  run: npm test

  # Second job: Deploy
  # This job depends on the successful completion of the build-and-test job.
  # It runs only for push events to the 'version-1' branch.
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test  # Specifies that this job needs the build-and-test job to complete first.
    if: github.event_name == 'push' && github.ref == 'refs/heads/version-1'  # Conditional execution for pushes to 'version-1' branch.

    steps:
    # Checks out the repository code into the GitHub Actions runner.
    - name: Checkout code
      uses: actions/checkout@v4

    # Steps performed in the deploy job
    steps:
    # Checks out the repository code into the GitHub Actions runner.
    - name: Checkout code
      uses: actions/checkout@v4

    # Adds the hosting server's SSH key to known hosts for secure connections.
    - name: Add HOST SSH Key to Known Hosts
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.HOST_SERVER }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    # Installs sshpass for non-interactive SSH login, facilitating automated deployment.
    - name: Install sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    # Deploys the application to the specified host server using a custom script.
    - name: Deploy to host server
      env:
        SERVER: ${{ secrets.HOST_SERVER }}
        USERNAME: ${{ secrets.HOST_USERNAME }}
        PASSWORD: ${{ secrets.HOST_PASSWORD }}
        LOCALDIR: 'out'
        REMOTEDIR: ${{ secrets.HOST_REMOTEDIR }}
      run: bash deploy.sh
